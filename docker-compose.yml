version: '3.8'
services:
  # API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: go-quiz-backend
    container_name: go-quiz-backend
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres_quiz_db
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=quizdb
      - GIN_MODE=${GIN_MODE:-debug}
    volumes:
      - .:/app
    depends_on:
      postgres_db:
        condition: service_healthy
    networks:
      - app-network
  
  # DATABASE
  postgres_db:
    image: postgres:latest
    container_name: postgres_quiz_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_DB=quizdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
      
  # Migration service to run database migrations
  db_migrate:
    image: go-quiz-backend
    container_name: go-quiz-migrate
    environment:
      - DB_HOST=postgres_quiz_db
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=quizdb
    volumes:
      - .:/app
    depends_on:
      postgres_db:
        condition: service_healthy
    networks:
      - app-network
    command: go run ./db/migrations/migrations.go
    profiles:
      - migrate
      
  # Seeder service for database seeding
  db_seed:
    image: go-quiz-backend
    container_name: go-quiz-seeder
    environment:
      - DB_HOST=postgres_quiz_db
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=quizdb
    volumes:
      - .:/app
    depends_on:
      postgres_db:
        condition: service_healthy
    networks:
      - app-network
    # This service will exit after running the seeder
    command: go run ./db/seeds/seeder.go
    profiles:
      - seed

networks:
  app-network:
    driver: bridge
  
volumes:
  postgres_data:
    driver: local
